d %>% group_by(year) %>% mutate(sd.count = (mean(count) / sd(count)))
d %>% group_by(year) %>% summarise(sd.count = (mean(count) / sd(count)))
source('C:/Users/Daniel/ADP_guide_book/ADP_guide_book.R', encoding = 'UTF-8', echo=TRUE)
d %>% group_by(year) %>% summarise(sd.count = mean(count))
head(d)
d = data.frame(year=rep(2012:2014, each=6), count=round(runif(9, 0, 20)))
d
head(d)
d %>% group_by(year) %>% summarise(sd.count = mean(count))
d %>% group_by(year) %>%  summarise(mean.count = mean(count))
ddply(d, 'year', summarise, mean.count=mean(count))
d %>% group_by(year) %>%  summarise_each(mean.count = mean(count))
d %>% group_by(year) %>%  summarise_all(mean.count = mean(count))
head(d)
str(d)
as.factor(d$year) -> d$year
d %>% group_by(year) %>% summarise(sd.count = mean(count))
str(d)
d %>% group_by(year) %>% summarise(sd.count = mean(count))
head(d)
str(d)
as.factor(d$year) -> d$year
d %>% group_by(year) %>% summarise(sd.count = mean(count))
d %>%
group_by(year) %>%
summaris_all(sd.count = mean(count))
d %>%
group_by(year) %>%
summarise_all(sd.count = mean(count))
d %>%
group_by(year) %>%
summarise_all(sd.count = mean(count))
d %>%
group_by(year) %>%
summarise(sd.count = mean(count))
data(suveys)
data(surveys)
d %>% group_by(year) %>%  summarise(mean.count = mean(count))
ddply(d, 'year', summarise, mean.count=mean(count))
d %>%
group_by(year) %>% sum
d %>%
group_by(year)
d %>%
group_by(year) %>% summarise(mean.count=mean(count))
d %>% group_by(year) %>% summarise(n())
d %>% group_by(year) %>% summarise_all(n())
d %>% group_by(year) %>% summarise_alll(mean.count=mean(count))
d %>% group_by(year) %>% summarise_all(mean.count=mean(count))
head(d)
str(d)
as.factor(d$year) -> d$year
d
d %>% group_by(year) %>% summarise(mean.count=mean(count))
d %>% group_by(year) %>% summarise_each(n())
d %>% group_by(year) %>% summarise(n())
d %>% group_by(year) %>% summarise(sun())
d %>% group_by(year) %>% summarise(sum(count))
iris %>% group_by(Species) %>% summarise(mean.Sepal.Length=mean(Sepal.Length))
mtcars %>% group_by(cyl, gear) %>% summarise(n = n())
mtcars %>% group_by(cyl, gear) %>% summarise(n = count())
mtcars %>% group_by(cyl, gear) %>% summarise(newvar = sum(wt))
library(dplyr)
d %>% group_by(year) %>% summarise(mean.count=mean(count))
d %>% group_by(year) %>% summarise(sum.count=sum(count))
iris %>% group_by(Species) %>% summarise(mean.Sepal.Length=mean(Sepal.Length))
mtcars %>% group_by(cyl, gear) %>% summarise(newvar = sum(wt))
# ddply
library(tidyverse)
d %>% group_by(year) %>% summarise(mean.count=mean(count))
d %>% group_by(year) %>% summarise(sum.count=sum(count))
# ddply
library(tidyverse)
runif(9,0,20)
set.seed(1)
d = data.frame(year=rep(2012:2014, each=6), count=round(runif(9, 0, 20)))
d
ddply(d, 'year', function(x) {
mean.count = mean(x$count)
sd.count = sd(x$count)
cv = sd.count/mean.count
data.frame(cv.count=cv)
})
head(d)
str(d)
as.factor(d$year) -> d$year
d
d %>% group_by(year) %>% summarise(mean.count=mean(count))
library(dplyr)
mtcars %>% group_by(cyl) %>% summarise(sum.wt = sum(wt))
detach(package:plyr)
mtcars %>% group_by(cyl) %>% summarise(sum.wt = sum(wt))
d %>% group_by(year) %>% summarise(mean.count=mean(count))
d %>% group_by(year) %>% summarise(sum.count=sum(count))
iris %>% group_by(Species) %>% summarise(mean.Sepal.Length=mean(Sepal.Length))
mtcars %>% group_by(cyl, gear) %>% summarise(newvar = sum(wt))
d %>% group_by(year) %>%  summarise(mean.count = mean(count))
ddply(d, 'year', summarise, mean.count=mean(count))
d %>% group_by(year) %>% transform(total.count = sum(count))
# data.table
install.packages('data.table')
DT = data.table(x=c('b', 'b', 'b', 'a', 'a'), v=rnorm(5))
# data.table
# install.packages('data.table')
library(data.table)
DT = data.table(x=c('b', 'b', 'b', 'a', 'a'), v=rnorm(5))
DT = data.table(x=c('b', 'b', 'b', 'a', 'a'), v=rnorm(5))
DT
data(cars)
head(cars)
CARS <- data.table(cars)
head(CARS)
tables()
sapply(CARS, class)
DT
DT[2,]
DT[DT$x=='b', ]
DT[x=="b", ]
runif(10)
grpsize <- ceiling(1e7/26^2)
grpsize
grpsize*26
grpsize*26*26
tt <- system.time(DF <- data.frame(
x=rep(LETTERS, each=26*grpsize),
y=rep(letters, each=grpsize),
v=runif(grpsize*26^2),
stringsAsFactors = F
))
tt
head(DF, 3)
tail(DF, 3)
dim(DF)
tt <- system.time(ans1 <- DF[DF$x == 'R' & DF$y == 'h', ])
tt
head(ans1)
head(DF,100)
DT <- data.table(DF)
setkey(DT,x,y)
ss <- system.time(ans2 <- DT[J('R', 'h')]) # binary search
ss
# bad case for using data.table, # 1.425 secs
system.time(ans2 <- DF[DF$x == 'R' & DF$y == 'h', ])
mapply(identical, ans1, ans2)
mapply(identical, ans1, ans2)
DT[, sum(v)]
DT[, sum(v), by=x]
ttt <- system.time(tt <- tapply(DT$v, DT$x, sum))
ttt
sss <- system.time(ss <- DT[, sum(v), by=x])
sss <- system.time(ss <- DT[, sum(v), by='x,y'])
sss
data(iris)
head(iris)
str(iris)
summary(iris)
cov(iris[, 1:4])
cor(iris[, 1:4])
# NA
y <- c(1,2,3,NA)
is.na(y)
head(mydat)
x <- c(1,2,NA,3)
mean(x)
mean(x, na.rm=T)
install.packages('Amelia')
data("freetrade")
head(freetrade)
dim(freetrade)
data("freetrade")
# install.packages('Amelia')
library(Amelia)
data("freetrade")
head(freetrade)
dim(freetrade)
str(freetrade)
a.out <- amelia(freetrade, m=5, ts='year', cs='country')
hist(a.out$imputations[[3]]$tariff, col='gray', border='white')
save(a.out, file = 'imputation.RData')
write.amelia(obj=a.out, file.stem = 'outdata')
missmap(a.out)
freetrade$tariff <- a.out$imputations[[5]]$tariff
missmap(freetrade)
# ouliers
x = rnorm(100)
boxplot(x)
x <- c(x, 19, 28, 30)
outwidth = boxplot(x)
outwidth$out
install.packages('outliers')
# install.packages('outliers')
library(outliers)
set.seed(1234)
y = rnorm(100)
outlier(y)
outlier(y, opposite = T)
a=c(10,20,30)
b=c(40,30,20)
a
t(b)
x=a%*%t(b)
x
y=a*b
y
head(iris)
library(MASS)
data(Animals)
head(Animals)
# regression
set.seed(2)
x = runif(10,0,11)
y = 2 + 3*x + rnorm(10,0,.2)
dfrm = data.frame(x,y)
dfrm
lm(y~x, data=dfrm)
u = runif(10,0,11)
v = runif(10,11,20)
w = runif(10,1,30)
y = 3 + .1*u + 2*v -3*w + rnorm(10,0,.1)
dfrm = data.frame(y, u, v, w)
dfrm
m <- lm(y~u+v+w)
m
summary(m)
library(MASS)
head(ChickWeight)
summary(ChickWeight)
dim(ChickWeight)
ChickWeight$Chick
ChickWeight %>% filter(Chick == 5)
length(ChickWeight$Chick)
ChickWeight %>% group_by(Chick) %>% summarise(sum.Chick = count(ChickWeight$Chick)) -> chicksum
ChickWeight %>% group_by(Chick) %>% summarise(sum.Chick = count(Chick)) -> chicksum
head(ChickWeight)
ChickWeight %>% group_by(Chick) %>% summarise(sum.Chick = count(Chick)) -> chicksum
head(ChickWeight)
ChickWeight %>% group_by(Chick) %>% summarise(sum.Chick = count(Chick))
str(ChickWeight)
library(MASS)
head(ChickWeight)
summary(ChickWeight)
str(ChickWeight)
head(ChickWeight)
library(MASS)
head(ChickWeight)
ChickWeight %>% group_by(Chick) %>% summarise(sum.Chick = count(Chick))
library(MASS)
head(ChickWeight)
summary(ChickWeight)
dim(ChickWeight)
ChickWeight$Chick
ChickWeight %>% filter(Chick == 5)
length(ChickWeight$Chick)
head(ChickWeight)
str(ChickWeight)
ChickWeight %>% group_by(Chick)
ChickWeight %>% group_by(Chick) %>% summarise(sum.Chick = count(Chick))
ChickWeight %>% filter((Chick == 1) & (Diet == 1)) -> Chick
lm(weight ~ Time, Chick) -> lm_chick
summary(lm_chick)
head(cars)
cars$speed2 <- cars$speed^2
head(cars)
cars[, c(3,1,2)] %>% head()
lm(dist ~ speed + speed2, data=cars)
summary(lm(dist ~ speed + speed2, data=cars))
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
y <- c(5, 3, 2, 3, 4, 6, 10, 12 ,18)
df1 <-data.frame(x, y)
df1
plot(df1)
library(ggplot2)
ggplot(data=df1) + geom_point(aes(df1$x, df1$y))
ggplot(data=df1, aes(x, y)) + geom_point(color='blue', alpha=.5, size=3)
df1$x2 <- x^2
df1
lm(y~x, data=df1)
summary(lm(y~x, data=df1))
plot(lm(y~x, data=df1))
x1 <- c(7, 1,11, 11,
7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 <- c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x1 <- c(7, 1,11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 <- c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 <- c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 <- c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
Y <- c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.9, 113.3, 109.4)
df <- data.frame(x1, x2, x3, x4, Y)
head(df)
head(df)
write.csv(df, './data/df_p390.csv')
a <- lm(Y ~ x1 + x2 + x3 + x4, data = df)
a
summary(a)
b <- lm(Y ~ x1 + x2 + x4, data=df)
b
summary(b)
c <- lm(Y ~x1+x2, data=df)
c
summary(c)
step(lm(Y ~ 1, df), scope=list(lower=~1, upper=~x1+x2+x3+x4), direction='forward')
step(lm(Y ~ 1, df), scope=list(lower=~1, upper=~x1+x2+x3+x4), direction='both')
data(hills)
head(hills)
step(lm(time ~ 1, hills), scope=list(lower=~1, upper=~dist+climb), direction='forward')
age <- c(7, 7, 8, 8, 8, 9, 11, 12, 12, 13, 13, 14, 14, 15, 16, 17, 17, 17, 17, 19, 19, 20, 23, 23, 23)
length(age)
height <- c(109, 112, 124, 125, 127, 130, 139, 150, 146, 155, 156, 153, 160, 158, 160, 153, 174, 176, 171, 156,
174, 178, 180, 175, 179)
length(height)
weight <- c(13.1, 12.9, 14.1, 16.2, 21.5, 17.5, 30.7, 28.4, 25.1, 31.5, 39.9, 42.1, 45.6, 51.2, 35.9,
34.8, 44.7, 60.1, 42.6, 37.2, 54.6, 64, 73.8, 51.1, 71.5)
length(weight)
bmp <- c(68, 65, 64, 67, 93, 68, 89, 69, 67, 68, 89, 90, 93, 93, 66, 70, 70, 92, 69, 72, 86, 86, 97, 71, 95)
length(bmp)
fev <- c(32, 19, 22, 41, 52, 44, 28, 18, 24, 23, 39, 26, 45, 45, 31, 29, 49, 29, 38, 21, 37, 34, 57, 33, 52)
length(fev)
rv <- c(258, 449, 441, 234, 202, 308, 305, 369, 312, 413, 206, 253, 174, 158, 302, 204, 187, 188, 172, 216,
184, 225, 171, 224, 225)
length(rv)
frc <- c(183, 245, 268, 146, 131, 155, 179, 198, 194, 225, 142, 191, 139, 124, 133, 118, 104, 129, 130, 119, 118, 148, 108, 131, 127)
length(frc)
tlc <- c(137, 134, 147, 124, 104, 118, 119, 103, 128, 136, 95, 121, 108, 90, 101, 120, 103, 130, 103,
81, 101, 135, 98, 113, 101)
length(tlc)
pemax <- c(95, 85, 100, 85, 95, 80, 65, 110, 70, 95, 110, 90, 100, 80, 134, 134, 165, 120, 130, 85, 85, 160, 165, 95, 195)
length(pemax)
bio <- data.frame(age, weight, bmp, fev, rv, frc, tlc, pemax)
write.csv(bio, './data/bio.csv', row.names = F)
bio <- read.csv('./data/bio.csv')
head(bio)
step(lm(pemax~1, bio), scope=list(lower=~1, upper=~age+height+weight+bmp+rv+frc+tlc), direction = 'forward')
step(lm(pemax~age+height+weight+bmp+rv+frc+tlc, bio), direction = 'backward')
step(lm(pemax~1, bio), scope=list(lower=~1, upper=~age+height+weight+bmp+rv+frc+tlc), direction = 'both')
install.packages('Hmisc')
# install.packages('Hmisc')
library(Hmisc)
data(mtcars)
head(mtcars)
dim(mtcars)
drat <- mtcars$drat
disp <- mtcars$disp
plot(drat, disp)
cor(drat, disp)
rcorr(as.matrix(mtcars), type='pearson')
cov(mtcars)
rcorr(as.matrix(mtcars), type='spearman')
korean <- c(85, 75, 65, 78, 59, 60, 90, 100, 99, 91, 70)
math <- c(80, 60, 75, 40, 50, 64, 70, 78, 90, 98, 50)
english <- c(80, 70, 69, 79, 80, 95, 98, 97, 67, 80, 59)
science <- c(90, 100, 50, 80, 67, 89, 60, 79, 89, 80, 100)
test <- data.frame(korean, math, english, science)
test
rcorr(as.matrix(test), type='spearman')
data(eurodist)
eurodist
loc <- cmdscale(eurodist)
x <- loc[,1]
y <- loc[,2]
plot(x, y, type='n', main='eurodist')
text(x, y, rownames(loc), cex=.8)
abline(v=0, h=0)
library(datasets)
data(USArrests)
head(USArrests)
summary(USArrests)
fit <- princomp(USArrests, cor=T)
summary(fit)
loadings(fit)
fit$scores
biplot(fit)
par(mfrow=c(1, 1))
biplot(fit)
nm <- c('쇠고기라면', '해물라면', '얼큰라면', '떡라면', '짬뽕라면', '만두라면', '치즈라면', '된장라면',
'볶음라면', '김치라면')
nodle <- c(2, 1, 5, 2, 3, 4, 4, 1, 3, 5)
bowl <- c(4, 5, 3, 2, 5, 3, 4, 2, 3, 5)
soup <- c(5, 1, 4, 3, 5, 2, 3, 1, 2, 3)
nodle_data <- data.frame(nodle, bowl, soup, row.names = nm)
nodle_data
write.csv(nodle_data, './data/nodle_data.csv', fileEncoding = 'utf-8')
rownames(nodle_data)
library(readr)
nodle_data <- read_csv('./data/nodle_data.csv')
nodle_data
nodle_data <- data.frame(column_to_rownames(nodle_data, var= "X1"))
nodle_data
p1 = prcomp(nodle_data, scale=T)
p1
summary(p1)
predict(p1)
biplot(p1)
library(readr)
nodle_data <- read_csv('./data/nodle_data.csv')
nodle_data
nodle_data <- data.frame(column_to_rownames(nodle_data, var= "X1"))
nodle_data
p1 = prcomp(nodle_data, scale=T)
p1
summary(p1)
predict(p1)
biplot(p1)
Price <- c(6,7,6,5,7,6,5,6,3,1,2,5,2,3,1,2)
Software <- c(5,3,4,7,7,4,7,5,5,3,6,7,4,5,6,3)
Aesthetics <- c(3,2,4,1,5,2,2,4,6,7,6,7,5,6,5,7)
Brand <- c(4,2,5,3,5,3,1,4,7,5,7,6,6,5,5,7)
data <- data.frame(Price, Software, Aesthetics, Brand)
write.csv(data, './data/computer_data_p419.csv', row.names = F)
data <- read.csv('./data/computer_data_p419.csv')
head(data)
pca <- princomp(data, cor=T)
summary(pca)
predict(pca)
biplot(pca)
head(data)
# ARIMA
Nile
ldeaths
str(Nile)
str(ldeaths)
plot(Nile)
plot(ldeaths)
ldeaths.decompose <- decompose(ldeaths)
ldeaths.decompose$seasonal
plot(ldeaths.decompose)
ldeaths.decompose.adj <- ldeaths - ldeaths.decompose$seasonal
plot(ldeaths.decompose.adj)
Nile.diff1 <- diff(Nile, differences=1)
plot(Nile.diff1)
Nile.diff2 <- diff(Nile, differences=2)
plot(Nile.diff2)
acf(Nile.diff2, lag.max=20)
acf(Nile.diff2, lag.max=20, plot=F)
pacf(Nile.diff2, lag.max=20)
pacf(Nile.diff2, lag.max=20, plot=F)
acf(Nile.diff2, lag.max=20)
acf(Nile.diff2, lag.max=20, plot=F)
pacf(Nile.diff2, lag.max=20)
pacf(Nile.diff2, lag.max=20, plot=F)
install.packages('forecast')
# install.packages('forecast')
library(forecast)
auto.arima(Nile)
Nile.arima <-  arima(Nile, order=c(1,1,1))
Nile.arima
Nile.forecasts <- forecast(Nile.arima, h=10)
plot(Nile.forecasts)
# exercise firm.csv data
firm <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)
length(firm)
salary <- c(3030, 6050, 3571, 3300, 0, 9375, 9525, 5000, 999, 3300, 3500, 2493,
1911, 2130, 1185, 5236, 1990, 6000, 6229, 1523)
length(salary)
tenure <- c(7, 0, 11, 6, 18, 6, 15, 5, 3, 2, 16, 5, 7, 4, 0, 2, 4, 32, 5, 3)
length(tenure)
age <- c(61, 51, 63, 60, 63, 57, 60, 61, 57, 60, 63, 61, 58, 59, 56, 60, 60, 74, 63, 56)
length(age)
sales <- c(161315, 144416, 139208, 100697, 100469, 81667, 76431, 57813, 56154, 53588,
50777, 47678, 47061, 41322, 37154, 35853, 33674, 33296, 32379, 31707)
length(sales)
profits <- c(2956, 22071, 4430, 6370, 9296, 6328, 5807, 5372, 1120, 6398, 5165, 1704, 2945, 1048, 3780, 1259,
568, 3765, 3782, 578)
length(profits)
assets <- c(257389, 237545, 49271, 92630, 355935, 86100, 668641, 59920, 36672, 59550, 617679,
42754, 33673, 37675, 30966, 299804, 14166, 19166, 194398, 3665875)
length(assets)
firm <- data.frame(firm, salary, tenure, age, sales, profits, assets)
write.csv(firm, './data/firm.csv', row.names = F)
read.csv('./data/firm.csv')
summary(firm)
var(firm$salary)
sd(firm$salary)
median(firm$salary)
for (i in 2:7) {
mean_value = mean(firm[, i])
sd_value = sd(firm[, i])
median_value = median(firm[, i])
print(mean_value)
print(sd_value)
print(median_value)
}
library(ggplot2)
ggplot(data = firm, aes(x = profits, y = salary)) + geom_point(color='blue')
ggplot(firm, aes(profits, salary)) + geom_point(color='blue', size=3)
firm_lm_1 <- lm(salary ~ profits, data = firm)
summary(firm_lm_1)
firm_lm_2 <- lm(salary ~ profits + age + sales, data=firm)
summary(firm_lm_2)
firm_lm_all <- lm(salary  ~ ., data= firm)
summary(firm_lm_all)
step(lm(salary ~ ., data=firm), direction='backward')
step(lm(salary ~ 1., data=firm), scope = list(lower=~1, upper=~tenure+sales+profits+assets),direction='forward')
step(lm(salary ~ 1., data=firm), scope = list(lower=~1, upper=~tenure+sales+profits+assets),direction='both')
data(iris)
a <- subset(iris, Species == 'setosa' | Species == 'versicolor')
a$Species <- as.factor(a$Species)
str(a)
b <- glm(Species ~ Sepal.Length, family = binomial, data=a)
summary(b)
pchisq(138.629, df=99, lower.tail = F)
pchisq(64.211, df=98, lower.tail = F)
exp(coef(b)['Sepal.Length'])
summary(b)
pchisq(138.629, df=99, lower.tail = F)
pchisq(64.211, df=98, lower.tail = F)
confint(b, param='Sepal.Length')
exp(confint(b, param='Sepal.Length'))
fitted(b)[c(1:5, 96:100)]
a
predict(b, newdata=a[c(1, 50, 51, 100), ], type='response')
summary(b)
confint(b, param='Sepal.Length')
